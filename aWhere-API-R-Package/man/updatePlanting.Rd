% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/updatePlanting.R
\name{updatePlanting}
\alias{updatePlanting}
\title{updatePlanting}
\usage{
updatePlanting(fieldId, plantingId = "", plantingDate = "",
  projectedYieldAmount = "", projectedYieldUnits = "",
  projectedHarvestDate = "", yieldAmount = "", yieldUnits = "",
  harvestDate = "")
}
\arguments{
\item{-}{plantingId: ID of planting to update}

\item{-}{fieldId: ID of field to search for plantings within}

\item{-}{plantingDate: new date to update as planting's plant date}

\item{-}{projectedYieldAmount: new amount to update as planting's projected yield amount}

\item{-}{projectedYieldUnits: new units to update as planting's projected yield units}

\item{-}{projectedHarvestDate: new projected harvest date to update as planting's projected harvest date}

\item{-}{yieldAmount: new amount to update as planting's yield amount}

\item{-}{yieldUnits: new units to update as planting's yield units}

\item{-}{harvestDate: new actual harvest date to update as planting's harvest date}
}
\value{
- A message confirming the changes have been made
}
\description{
\code{updatePlanting} To update details of a particular planting
}
\details{
Occasionally you will need to update a planting, changing the projections
or recording the end-of-season information for historical tracking and model tuning.
This API supports both partial and complete updates of plantings.  When updating an
entire planting, the whole object is replaced in the database. Any properties that
were previously set, and now are not, will be null'd. The required properties must
also be set even if they are changed.
}
\examples{
updateField("64322", "FieldA", "2016-02-01", "60", "Bushels")

}

